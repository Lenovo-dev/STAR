/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-26 07:17:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.templates.loginpage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findID_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../static/css/loginpage/findID.css\" type=\"text/css\">\r\n");
      out.write("<title>아이디 찾기|STAR</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"layer_fix layer_unfix pop_login pop_mem_reserve new-style-form\">\r\n");
      out.write("	    <section>\r\n");
      out.write("	        <form id=\"loginForm\" action=\" \" autocomplete=\"off\" method=\"post\" novalidate=\"novalidate\">\r\n");
      out.write("	            <input type=\"hidden\" name=\"returnUrl\" value=\"\">\r\n");
      out.write("	            <input type=\"hidden\" name=\"yeogi_token\" value=\"2cf8e68f8bdb03b31adc6651f9b9751c\">\r\n");
      out.write("	\r\n");
      out.write("	            <strong class=\"sub_title\">아이디 찾기</strong>\r\n");
      out.write("	            <p class=\"txt_top\">\r\n");
      out.write("	                회원가입 시 등록한 이메일 주소를 입력해 주세요.\r\n");
      out.write("	            </p>\r\n");
      out.write("	\r\n");
      out.write("	            <div class=\"pop_login_errors\">\r\n");
      out.write("	                <ul>\r\n");
      out.write("	                                    </ul>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <div class=\"inp_type_1 ico_email form-errors\">\r\n");
      out.write("	            <!-- focus / err -->\r\n");
      out.write("	                <input type=\"email\" name=\"uid\" id=\"gcuseremail\" placeholder=\"이메일 주소\" required=\"\" class=\"required\" value=\"\" data-msg-required=\"이메일 주소를 확인해 주세요.\">\r\n");
      out.write("						<label id=\"gcuseremail_msg\" class=\"validate_msg_label\" style=\"color: red;\"></label>\r\n");
      out.write("	            <button type=\"button\" class=\"reset_val\">초기화</button>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <button type=\"submit\" data-js-validate-email=\"\" class=\"btn_link gra_left_right_red\" disabled=\"\">\r\n");
      out.write("	            	<span>확인</span>\r\n");
      out.write("	            </button>\r\n");
      out.write("	        </form>\r\n");
      out.write("	    </section>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\r\n");
      out.write("var youhyo =/([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/ ;\r\n");
      out.write("\r\n");
      out.write(" $(\"#gcuseremail\").blur(function(){\r\n");
      out.write("\r\n");
      out.write("    var email = $(\"#gcuseremail\").val();\r\n");
      out.write("\r\n");
      out.write("    if( email == '' || email == 'undefined') {\r\n");
      out.write("        $(\"#gcuseremail_msg\").css('color','red');\r\n");
      out.write("        $(\"#gcuseremail_msg\").text('이메일을 입력해 주세요');  \r\n");
      out.write("        return false;\r\n");
      out.write("}\r\n");
      out.write("    else if(! youhyo.test(email)  ) {\r\n");
      out.write("        $(\"#gcuseremail_msg\").css('color','red');\r\n");
      out.write("        $(\"#gcuseremail_msg\").text('사용할 수 없는 이메일 입니다.');\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    else if( youhyo.test(email)  ) {\r\n");
      out.write("        $(\"#gcuseremail_msg\").css('color','blue');\r\n");
      out.write("        $(\"#gcuseremail_msg\").text('사용할 수 있는 이메일 입니다.');\r\n");
      out.write("       \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

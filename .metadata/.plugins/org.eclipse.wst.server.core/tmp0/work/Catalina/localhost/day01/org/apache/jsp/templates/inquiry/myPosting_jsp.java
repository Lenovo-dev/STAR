/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-20 05:01:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.templates.inquiry;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPosting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../static/css/inquiry/myPosting.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css\" />\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrap show\">\r\n");
      out.write("		<header class=\"recommend_header\">\r\n");
      out.write("            <section>\r\n");
      out.write("                <h1>\r\n");
      out.write("                    <a class=\"\" href=\"\"></a>\r\n");
      out.write("                </h1>\r\n");
      out.write("                <button type=\"button\" class=\"btn_srch srch_open\">검색</button>\r\n");
      out.write("                <ul class=\"gnb_pc\">\r\n");
      out.write("                    <li><a href=\"\">내주변</a></li>\r\n");
      out.write("                    <li><a href=\"\">예약내역</a></li>\r\n");
      out.write("                    <li><a href=\"\">더보기</a></li>\r\n");
      out.write("                    <li><a href=\"\">로그인</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </section>\r\n");
      out.write("        </header>\r\n");
      out.write("		<div class=\"sub_top_wrap\">\r\n");
      out.write("			<div class=\"sub_top bg_kong_2\">\r\n");
      out.write("				<h2>내가 작성한 글</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"content\" class=\"sub_wrap more_wrap\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"info.jsp\">내 정보 관리</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"../mypage/petsitterform.jsp\">돌보미 신청</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"../mypage/carelist.jsp\">돌봄 내역</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"../mypage/reservationlist.jsp\">이용 내역</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"../mypage/review.jsp\">이용후기</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"../mypage/report.jsp\">신고목록</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<a class=\"mypageatag\" href=\"../inquiry/myPosting.jsp\">내가 작성한 글</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("	<div class=\"align_rt\">\r\n");
      out.write("		<!-- Inquiry -->\r\n");
      out.write("		<div class=\"inquiry\">\r\n");
      out.write("\r\n");
      out.write("			<!-- Tab -->\r\n");
      out.write("			<div class=\"tab\">\r\n");
      out.write("				<span class=\"tab_btn active\"><a href=\"../inquiry/OTOmodi.jsp\">나의 문의 내역</a></span>\r\n");
      out.write("				<span class=\"tab_btn\"><a href=\"../inquiry/OTOwrite.jsp\">새 문의 작성</a></span>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 리스트 -->\r\n");
      out.write("			<div class=\"tab_each\" style=\"display: block;\">\r\n");
      out.write("				<ul class=\"show_list open_list\" id=\"inquiry_list\">\r\n");
      out.write("					<li onclick=\"\">\r\n");
      out.write("						<a href=\"https://www.goodchoice.kr/more/inquiry#inquiry_list\" class=\"list_que open\">\r\n");
      out.write("							<!-- 답변완료/ NEW 버튼 2벌임 -->\r\n");
      out.write("							<p>\r\n");
      out.write("								<b>예약/결제</b>\r\n");
      out.write("								test test test\r\n");
      out.write("								<b class=\"reply_chk\">답변완료</b>\r\n");
      out.write("							</p>\r\n");
      out.write("							<span>\r\n");
      out.write("                                작성일 2023. 04. 16\r\n");
      out.write("                            </span>\r\n");
      out.write("						</a>\r\n");
      out.write("						<div class=\"list_ans\" style=\"display: block;\">\r\n");
      out.write("							<b class=\"title\">문의</b>\r\n");
      out.write("							<div>test test test</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<section class=\"btn_wrap \">\r\n");
      out.write("						<button class=\"btn_blue_fill\" type=\"button\" onclick=\"$.inqSubmit();\">수정하기</button>\r\n");
      out.write("					</section>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- //Notice -->\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
